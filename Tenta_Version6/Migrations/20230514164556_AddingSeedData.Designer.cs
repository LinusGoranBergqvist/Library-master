// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tenta_Version6;

#nullable disable

namespace Tenta_Version6.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230514164556_AddingSeedData")]
    partial class AddingSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorsId = 1,
                            BooksId = 1
                        },
                        new
                        {
                            AuthorsId = 2,
                            BooksId = 2
                        },
                        new
                        {
                            AuthorsId = 3,
                            BooksId = 3
                        },
                        new
                        {
                            AuthorsId = 1,
                            BooksId = 5
                        },
                        new
                        {
                            AuthorsId = 4,
                            BooksId = 4
                        },
                        new
                        {
                            AuthorsId = 4,
                            BooksId = 6
                        });
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            BooksId = 1,
                            GenresId = 1
                        },
                        new
                        {
                            BooksId = 2,
                            GenresId = 1
                        },
                        new
                        {
                            BooksId = 3,
                            GenresId = 1
                        },
                        new
                        {
                            BooksId = 5,
                            GenresId = 1
                        },
                        new
                        {
                            BooksId = 4,
                            GenresId = 2
                        },
                        new
                        {
                            BooksId = 6,
                            GenresId = 2
                        });
                });

            modelBuilder.Entity("BookUser", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("BookUser");
                });

            modelBuilder.Entity("Tenta_Version6.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "J.K Rolling"
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "George Lucas"
                        },
                        new
                        {
                            Id = 4,
                            AuthorName = "Stephen King"
                        });
                });

            modelBuilder.Entity("Tenta_Version6.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ISBN")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This book has this Description for now 1",
                            ISBN = 23618,
                            Quantity = 1,
                            Title = "Harry Potter and the Goblet of Fire"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This book has this Description for now 2",
                            ISBN = 24672,
                            Quantity = 1,
                            Title = "Lord of the Rings: The Two Towers"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This book has this Description for now 3",
                            ISBN = 386518,
                            Quantity = 1,
                            Title = "Star Wars Return of the Sith"
                        },
                        new
                        {
                            Id = 4,
                            Description = "This Book has this Description for now 4",
                            ISBN = 92228,
                            Quantity = 1,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 5,
                            Description = "This book has this Description for now 5",
                            ISBN = 58240,
                            Quantity = 1,
                            Title = "Harry Potter and the Order of the Phoenix"
                        },
                        new
                        {
                            Id = 6,
                            Description = "This book has this Description for now 6",
                            ISBN = 112649,
                            Quantity = 1,
                            Title = "IT"
                        });
                });

            modelBuilder.Entity("Tenta_Version6.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreName = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            GenreName = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            GenreName = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            GenreName = "Nonfiction"
                        });
                });

            modelBuilder.Entity("Tenta_Version6.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kungsgatan 19k",
                            Name = "Jonas",
                            PhoneNumber = 733293812
                        },
                        new
                        {
                            Id = 2,
                            Address = "Östraringgatan 23",
                            Name = "Rune",
                            PhoneNumber = 783281934
                        },
                        new
                        {
                            Id = 3,
                            Address = "Drottningsgatan 12",
                            Name = "Billy",
                            PhoneNumber = 713782123
                        },
                        new
                        {
                            Id = 4,
                            Address = "Lunargatan 28",
                            Name = "Pille",
                            PhoneNumber = 783726132
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("Tenta_Version6.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tenta_Version6.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.HasOne("Tenta_Version6.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tenta_Version6.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookUser", b =>
                {
                    b.HasOne("Tenta_Version6.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tenta_Version6.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
